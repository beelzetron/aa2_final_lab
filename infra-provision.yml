---
- name: Provision Openstack servers
  hosts: localhost
  vars_files:
    - vars/main-vars.yml
  tasks:
    - name: Get control node facts from Openstack
      os_server_info:
        cloud: "{{ instance_cloud | default(omit) }}"
        server: control
      register: control_node_info
    
    - name: Provision dev-lb instance
      include_role:
        name: os_instance
      vars:
        instance_name: dev-lb
        instance_ns: "{{ control_node_info.openstack_servers[0].private_v4 }}"
        instance_metadata: "AnsibleGroup=load_balancers,deployment_name=dev"

    - name: Provision dev-db instance
      include_role:
        name: os_instance
      vars:
        instance_name: dev-db
        instance_ns: "{{ control_node_info.openstack_servers[0].private_v4 }}"
        instance_metadata: "AnsibleGroup=database_servers,deployment_name=dev"
    
    - name: Provision web1 instance
      include_role:
        name: os_instance
      vars:
        instance_name: dev-web1
        instance_ns: "{{ control_node_info.openstack_servers[0].private_v4 }}"
        instance_metadata: "AnsibleGroup=app_servers,deployment_name=dev"
    
    - name: Provision web2 instance
      include_role:
        name: os_instance
      vars:
        instance_name: dev-web2
        instance_ns: "{{ control_node_info.openstack_servers[0].private_v4 }}"
        instance_metadata: "AnsibleGroup=app_servers,deployment_name=dev"

    - name: Collect new instances info
      os_server_info:
        cloud: "{{ instance_cloud | default(omit) }}"
        server: dev-*
      register: dev_instances_info

    - name: Add new instances to inventory
      add_host:
        host: "{{ __instance.name }}"
        group: dev_instances
        ansible_host: "{{ __instance.private_v4 }}"
      loop: "{{ dev_instances_info.openstack_servers }}"
      loop_control:
        loop_var: __instance
        
- name: Register instances to Satellite
  hosts: dev_instances
  become: yes
  gather_facts: no
  vars_files:
    - vars/main-vars.yml
  pre_tasks:
    - name: Wait for instances to be reachable
      wait_for_connection:
    - name: Check Satellite is reachable
      uri:
        url: "{{ satellite_ca_rpm }}"
      register: satellite_rpm
      until: satellite_rpm.status == 200
      delay: 10
      retries: 12
  roles:
    - satellite
